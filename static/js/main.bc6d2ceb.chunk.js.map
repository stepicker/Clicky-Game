{"version":3,"sources":["components/Header.js","components/Card.js","App.js","index.js"],"names":["styles","header","backgroundColor","padding","display","justifyContent","info","margin","color","fontFamily","Header","props","react_default","a","createElement","style","score","Card","state","hover","handleMouseHover","_this","setState","_this2","this","card","height","width","WebkitBoxShadow","boxShadow","img","opacity","cursor","alt","name","src","image","onMouseEnter","onMouseLeave","onClick","checkRiderId","id","Component","riders","flexWrap","maxWidth","scoringSound","Audio","winningSound","losingSound","App","allRiders","sort","Math","random","clickedRiderIds","resetScore","youLose","console","log","play","swal","title","text","icon","youWin","keepClicking","clickedId","newScore","concat","alreadyClicked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","components_Header","map","rider","components_Card","key","toString","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bc6d2ceb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n    header: {\r\n        backgroundColor: \"#209cee\",\r\n        padding: \"10px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    info: {\r\n        margin: \"5px 20px\",\r\n        color: \"white\",\r\n        fontFamily: \"'Noto Sans KR', sans-serif\"\r\n    }\r\n}\r\n\r\nfunction Header(props) {\r\n    \r\n    return(\r\n        <header style={styles.header}>\r\n            <h2 style={styles.info}>MotoGP Clicky Game!</h2>\r\n            <h2 style={styles.info}>Score: {props.score}</h2>\r\n        </header>\r\n    )\r\n    \r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n\r\n  state = {hover: false};\r\n\r\n  handleMouseHover = () => {\r\n    this.setState({hover: !this.state.hover});\r\n  }\r\n\r\n  render() {\r\n\r\n    const styles = {\r\n      card: {\r\n        margin: 20,\r\n        height: \"150px\",\r\n        width: \"250px\",\r\n        WebkitBoxShadow: \"2px 2px 10px 1px rgba(0,0,0,0.5)\",\r\n        boxShadow: \"2px 2px 10px 1px rgba(0,0,0,0.5)\"\r\n      },\r\n      img: {\r\n        height: \"150px\",\r\n        width: \"250px\",\r\n        opacity: !this.state.hover ? 1.0 : 0.6,\r\n        cursor: !this.state.hover ? \"\" : \"pointer\",\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={styles.card}>\r\n          <img style={styles.img} alt={this.props.name} src={this.props.image} onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover} onClick={() => this.props.checkRiderId(this.props.id)} />\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport riders from \"./riders.json\";\nimport swal from 'sweetalert';\n\nconst styles = {\n  riders: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    maxWidth: \"900px\",\n    margin: \"10px auto 10px auto\"\n  }\n};\n\nconst scoringSound = new Audio(\"./sounds/ding.mp3\");\nconst winningSound = new Audio(\"./sounds/ta-da.mp3\");\nconst losingSound = new Audio(\"./sounds/sad-trombone.mp3\");\n\nclass App extends Component {\n\n  state = {\n    allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n    clickedRiderIds: [],\n    score: 0\n  };\n\n  resetScore = () => {\n    this.setState({\n      allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n      clickedRiderIds: [],\n      score: 0\n    });\n  }\n\n  youLose = () => {\n    // Acknowledge the loss, and reset the state\n    console.log(\"You lose!\");\n    losingSound.play();\n    this.resetScore();\n    swal({\n      title: \"Nope...\",\n      text: \"You have already clicked that one. Try again!\",\n      icon: \"error\",\n    });\n  }\n\n  youWin = () => {\n    // Acknowledge the win, then reset the state\n    console.log(\"You win!\");\n    winningSound.play();\n    this.resetScore();\n    swal({\n      title: \"Whoohoo!!\",\n      text: \"You got all nine riders! Click OK to play again.\",\n      icon: \"success\",\n    });\n  }\n\n  keepClicking = (clickedId) => {\n    // Acknowledge the point gained, and update the state accordingly\n    console.log(\"Keep clicking!\");\n    scoringSound.play();\n    const oldScore = this.state.score;\n    const newScore = oldScore + 1;\n    if (newScore === 9) {\n      this.youWin();\n    }\n    else {\n      this.setState({\n        allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n        clickedRiderIds: this.state.clickedRiderIds.concat(clickedId),\n        score: newScore\n      });\n    }\n  }\n\n  checkRiderId = clickedId => {\n    let alreadyClicked = false;\n    // Check if the clicked ID had already been clicked\n    for (let i of this.state.clickedRiderIds){\n      if (i === clickedId) {\n        alreadyClicked = true;\n      }\n    };\n    // Lose or keep playing, based on the result of the loop above\n    if (alreadyClicked) {\n      this.youLose();\n    }\n    else {\n      this.keepClicking(clickedId);\n    };\n  }\n\n  render() {\n    console.log(\"Clicked so far: \", this.state.clickedRiderIds);\n    return (\n      <div id=\"main-container\">\n        <Header score={this.state.score} />\n        <div id=\"riders\" style={styles.riders}>\n          {this.state.allRiders.map(rider => (\n            <Card\n              id={rider.id}\n              key={rider.id.toString()}\n              name={rider.name}\n              image={rider.image}\n              checkRiderId={this.checkRiderId}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}