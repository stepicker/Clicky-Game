{"version":3,"sources":["components/Header.js","components/Card.js","App.js","index.js"],"names":["styles","header","background-color","padding","display","justify-content","info","margin","color","font-family","Header","props","react_default","a","createElement","style","score","card","height","width","-webkit-box-shadow","box-shadow","img","Card","alt","name","src","image","onClick","checkRiderId","id","riders","flex-wrap","max-width","winningSound","Audio","losingSound","App","state","allRiders","sort","Math","random","clickedRiderIds","youLose","console","log","play","_this","setState","keepClicking","clickedId","concat","alreadyClicked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","_this2","this","components_Header","map","rider","components_Card","key","toString","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4oBAEMA,EAAS,CACXC,OAAQ,CACJC,mBAAoB,UACpBC,QAAW,OACXC,QAAW,OACXC,kBAAmB,UAEvBC,KAAM,CACFC,OAAU,WACVC,MAAS,QACTC,cAAe,+BAaRC,MATf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQC,MAAOf,EAAOC,QAClBW,EAAAC,EAAAC,cAAA,MAAIC,MAAOf,EAAOM,MAAlB,uBACAM,EAAAC,EAAAC,cAAA,MAAIC,MAAOf,EAAOM,MAAlB,UAAgCK,EAAMK,SClB5ChB,EAAS,CACbiB,KAAM,CACJV,OAAU,GACVW,OAAU,QACVC,MAAS,QACTC,qBAAsB,mCACtBC,aAAc,oCAEhBC,IAAK,CACHJ,OAAU,QACVC,MAAS,UAYEI,MARf,SAAcZ,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAOf,EAAOiB,MACfL,EAAAC,EAAAC,cAAA,OAAKC,MAAOf,EAAOsB,IAAKE,IAAKb,EAAMc,KAAMC,IAAKf,EAAMgB,MAAOC,QAAS,kBAAMjB,EAAMkB,aAAalB,EAAMmB,gBCdrG9B,EAAS,CACb+B,OAAQ,CACN3B,QAAW,OACX4B,YAAa,OACbC,YAAa,QACb1B,OAAU,wBAIR2B,EAAe,IAAIC,MAAM,qBACzBC,EAAc,IAAID,MAAM,6BAmEfE,6MA/DbC,MAAQ,CACNC,UAAWR,EAAOS,KAAK,WAAQ,MAAO,GAAMC,KAAKC,WACjDC,gBAAiB,GACjB3B,MAAO,KAGT4B,QAAU,WACRC,QAAQC,IAAI,aACZV,EAAYW,OACZC,EAAKC,SAAS,CACZV,UAAWR,EAAOS,KAAK,WAAQ,MAAO,GAAMC,KAAKC,WACjDC,gBAAiB,GACjB3B,MAAO,OAIXkC,aAAe,SAACC,GACdN,QAAQC,IAAI,kBACZZ,EAAaa,OACbC,EAAKC,SAAS,CACZV,UAAWR,EAAOS,KAAK,WAAQ,MAAO,GAAMC,KAAKC,WACjDC,gBAAiBK,EAAKV,MAAMK,gBAAgBS,OAAOD,GACnDnC,MAAOgC,EAAKV,MAAMtB,MAAQ,OAI9Ba,aAAe,SAAAsB,GACb,IAAIE,GAAiB,EADKC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG1B,QAAAC,EAAAC,EAAcX,EAAKV,MAAMK,gBAAzBiB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAyC,CAAAI,EAAAM,QAC7Bb,IACRE,GAAiB,IALK,MAAAY,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAStBH,EACFL,EAAKJ,UAGLI,EAAKE,aAAaC,4EAIb,IAAAgB,EAAAC,KACP,OACExD,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,kBACNlB,EAAAC,EAAAC,cAACuD,EAAD,CAAQrD,MAAOoD,KAAK9B,MAAMtB,MAAOD,MAAOf,EAAOC,SAC/CW,EAAAC,EAAAC,cAAA,OAAKgB,GAAG,SAASf,MAAOf,EAAO+B,QAC5BqC,KAAK9B,MAAMC,UAAU+B,IAAI,SAAAC,GAAK,OAC7B3D,EAAAC,EAAAC,cAAC0D,EAAD,CACE1C,GAAIyC,EAAMzC,GACV2C,IAAKF,EAAMzC,GAAG4C,WACdjD,KAAM8C,EAAM9C,KACZE,MAAO4C,EAAM5C,MACbE,aAAcsC,EAAKtC,0BAxDf8C,aCblBC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2da6fbc9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n    header: {\r\n        \"background-color\": \"#209cee\",\r\n        \"padding\": \"10px\",\r\n        \"display\": \"flex\",\r\n        \"justify-content\": \"center\"\r\n    },\r\n    info: {\r\n        \"margin\": \"5px 20px\",\r\n        \"color\": \"white\",\r\n        \"font-family\": \"'Noto Sans KR', sans-serif\"\r\n    }\r\n}\r\n\r\nfunction Header(props) {\r\n    return(\r\n        <header style={styles.header}>\r\n            <h2 style={styles.info}>MotoGP Clicky Game!</h2>\r\n            <h2 style={styles.info}>Score: {props.score}</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    \"margin\": 20,\r\n    \"height\": \"150px\",\r\n    \"width\": \"250px\",\r\n    \"-webkit-box-shadow\": \"2px 2px 10px 1px rgba(0,0,0,0.5)\",\r\n    \"box-shadow\": \"2px 2px 10px 1px rgba(0,0,0,0.5)\"\r\n  },\r\n  img: {\r\n    \"height\": \"150px\",\r\n    \"width\": \"250px\"\r\n  }\r\n}\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div style={styles.card}>\r\n        <img style={styles.img} alt={props.name} src={props.image} onClick={() => props.checkRiderId(props.id)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport riders from \"./riders.json\";\n\nconst styles = {\n  riders: {\n    \"display\": \"flex\",\n    \"flex-wrap\": \"wrap\",\n    \"max-width\": \"900px\",\n    \"margin\": \"10px auto 10px auto\"\n  }\n};\n\nconst winningSound = new Audio('./sounds/ding.mp3');\nconst losingSound = new Audio('./sounds/sad-trombone.mp3');\n\nclass App extends Component {\n\n  state = {\n    allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n    clickedRiderIds: [],\n    score: 0\n  };\n\n  youLose = () => {\n    console.log(\"You lose!\");\n    losingSound.play();\n    this.setState({\n      allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n      clickedRiderIds: [],\n      score: 0\n    });\n  }\n\n  keepClicking = (clickedId) => {\n    console.log(\"Keep clicking!\");\n    winningSound.play();\n    this.setState({\n      allRiders: riders.sort(() => { return 0.5 - Math.random() }),\n      clickedRiderIds: this.state.clickedRiderIds.concat(clickedId),\n      score: this.state.score + 1\n    });\n  }\n\n  checkRiderId = clickedId => {\n    let alreadyClicked = false;\n    // Check if the clicked ID had already been clicked\n    for (let i of this.state.clickedRiderIds){\n      if (i === clickedId) {\n        alreadyClicked = true;\n      }\n    };\n    // Lose or keep playing, based on the result of the loop above\n    if (alreadyClicked) {\n      this.youLose();\n    }\n    else {\n      this.keepClicking(clickedId);\n    };\n  }\n\n  render() {\n    return (\n      <div id=\"main-container\">\n        <Header score={this.state.score} style={styles.header} />\n        <div id=\"riders\" style={styles.riders}>\n          {this.state.allRiders.map(rider => (\n            <Card\n              id={rider.id}\n              key={rider.id.toString()}\n              name={rider.name}\n              image={rider.image}\n              checkRiderId={this.checkRiderId}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}